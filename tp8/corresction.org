#+title: Correction TP8

* Exercice 6

#+BEGIN_SRC python
  import numpy as np
  import matplotlib.pyplot as plt
  from numpy import pi

  def f(x):
      return nb.sin(x)
#+END_SRC

~linspace~ = nombre de points, bornes incluses
~arange~ = écart entre deux points (borne supérieure exclue)

#+BEGIN_SRC python
  N = 4
  x = np.linspace(-pi, pi, N+1)
#+END_SRC

Vecteur colonne bidimensionnel :

#+BEGIN_SRC python
  a = np.ones(N+1)
  a = a.rechape(N+1, 1)
#+END_SRC

#+BEGIN_SRC python
  a = np.ones(N+1).rechape(N+1, 1) # En une ligne
  L = np.copy(a) # Premiere colonne
  for i in range(N):
      a = a * x.reshape(N+1, 1) # attention à la dimension de x
      L = np.hstack((k, a))
  print(L)
#+END_SRC

Résolution du système

#+BEGIN_SRC python
  b = f(x)
  sol = np.linarg.solve(L, b)
  print(a)
#+END_SRC

Question 2

#+BEGIN_SRC python
  plt.figure(figsize=(12, 8))
  t = nb.linspace(-pi, pi, 250)
  y = np.polyval(sol[::-1], t)
  plt.plot(t, y, label='approximation par polynome')
  plt.plot(t, f(t), label='fonction f')
  plt.legend()
  plt.show()
#+END_SRC
